I"«<ol>
  <li>Add Backports Repository:
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">echo</span> <span class="s2">"deb http://deb.debian.org/debian stretch-backports main"</span> <span class="o">&gt;</span> /etc/apt/sources.list.d/stretch-backports<span class="s2">"
</span></code></pre></div>    </div>
  </li>
  <li>Install packages:
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>apt update
apt <span class="nb">install </span>duplicity duply <span class="nt">-t</span> stretch-backports
pip <span class="nb">install </span>b2
</code></pre></div>    </div>
  </li>
  <li>Create template for non-interactive GPG key generation:
    <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Key-Type: 1
Key-Length: 4096
Subkey-Type: 1
Subkey-Length: 4096
Name-Real: backup-$(hostname)
Name-Email: backup@$(hostname)
Expire-Date: 0
</code></pre></div>    </div>
  </li>
  <li>Generate GPG key pair:
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gpg <span class="nt">--pinentry-mode</span><span class="o">=</span>loopback <span class="nt">--passphrase</span><span class="o">=</span><span class="s2">""</span> <span class="nt">--batch</span> <span class="nt">--gen-key</span> /tmp/gpg-key-gen.txt
<span class="nb">rm</span> /tmp/gpg-key-gen.txt
</code></pre></div>    </div>
  </li>
  <li>Show genereated key ID:
    <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gpg --list-keys --keyid-format=short backup@$(hostname) | awk '/^pub/ {print $2}' | awk -F/ '{print $2}'
</code></pre></div>    </div>
  </li>
  <li>Generate <em>Duply</em> config:
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>duply b2 create
</code></pre></div>    </div>
  </li>
  <li>Edit <code class="highlighter-rouge">/root/.duply/b2/conf</code>:
    <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>GPG_KEY="&lt;$GPG_KEY_ID&gt;"
GPG_PW=""

SOURCE="/"
TARGET="b2://&lt;$BACKBLAZE_ACCOUNT_ID&gt;:&lt;$BACKBLAZE_APPLICATION_KEY&gt;@&lt;$BACKBLAZE_UNIQUE_BUCKET_NAME&gt;"

MAX_AGE=1M
MAX_FULL_BACKUPS=4
MAX_FULLS_WITH_INCRS=1
</code></pre></div>    </div>
  </li>
  <li>Create <code class="highlighter-rouge">/root/.duply/b2/excludes</code>:
    <div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="pi">-</span> <span class="s">/proc/*</span>
<span class="pi">-</span> <span class="s">/sys/*</span>
<span class="pi">-</span> <span class="s">/dev/*</span>
<span class="pi">-</span> <span class="s">/mnt/*</span>
<span class="pi">-</span> <span class="s">/tmp/*</span>
<span class="pi">-</span> <span class="s">/var/cache/*</span>
</code></pre></div>    </div>
  </li>
  <li>Create backup cronjobs:
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">(</span>crontab <span class="nt">-l</span><span class="p">;</span> <span class="nb">echo</span> <span class="s2">"0 0 * * 6 /usr/bin/duply b2 full_verify_purge --force &gt;/var/log/duply.log 2&gt;&amp;1"</span><span class="o">)</span> | crontab -
<span class="o">(</span>crontab <span class="nt">-l</span><span class="p">;</span> <span class="nb">echo</span> <span class="s2">"0 0 * * 0-5 /usr/bin/duply b2 incr &gt;/var/log/duply.log 2&gt;&amp;1"</span><span class="o">)</span> | crontab -
</code></pre></div>    </div>
  </li>
  <li>Run initial backup:
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>duply b2 backup
</code></pre></div>    </div>
  </li>
  <li>Transfer the <code class="highlighter-rouge">/root/.duply/b2</code> folder to your local machine, it contains the backup configuration and the secret decryption key, which is needed to restore files from backup.</li>
</ol>

<hr />
:ET